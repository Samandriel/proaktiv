/** @type {import('tailwindcss').Config} */

import colors from 'tailwindcss/colors';

module.exports = {
  darkMode: 'class',
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    colors: {
      ...colors,
      primary: {
        darkest: 'hsl(var(--color-hsl-primary-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-primary-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-primary-dark) / <alpha-value>)',
        darkish: 'hsl(var(--color-hsl-primary-darkish) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-primary) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-primary-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-primary-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-primary-lightest) / <alpha-value>)',
        faded: 'hsl(var(--color-hsl-primary-faded) / <alpha-value>)',
      },
      secondary: {
        darkest: 'hsl(var(--color-hsl-secondary-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-secondary-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-secondary-dark) / <alpha-value>)',
        darkish: 'hsl(var(--color-hsl-secondary-darkish) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-secondary) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-secondary-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-secondary-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-secondary-lightest) / <alpha-value>)',
        faded: 'hsl(var(--color-hsl-secondary-faded) / <alpha-value>)',
      },
      tertiary: {
        darkest: 'hsl(var(--color-hsl-tertiary-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-tertiary-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-tertiary-dark) / <alpha-value>)',
        darkish: 'hsl(var(--color-hsl-tertiary-darkish) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-tertiary) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-tertiary-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-tertiary-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-tertiary-lightest) / <alpha-value>)',
        faded: 'hsl(var(--color-hsl-tertiary-faded) / <alpha-value>)',
      },
      quaternary: {
        darkest: 'hsl(var(--color-hsl-quaternary-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-quaternary-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-quaternary-dark) / <alpha-value>)',
        darkish: 'hsl(var(--color-hsl-quaternary-darkish) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-quaternary) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-quaternary-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-quaternary-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-quaternary-lightest) / <alpha-value>)',
        faded: 'hsl(var(--color-hsl-quaternary-faded) / <alpha-value>)',
      },
      quinary: {
        darkest: 'hsl(var(--color-quinary-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-quinary-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-quinary-dark) / <alpha-value>)',
        darkish: 'hsl(var(--color-hsl-quinary-darkish) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-quinary) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-quinary-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-quinary-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-quinary-lightest) / <alpha-value>)',
        faded: 'hsl(var(--color-hsl-quinary-faded) / <alpha-value>)',
      },
      success: {
        darkest: 'hsl(var(--color-success-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-success-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-success-dark) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-success) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-success-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-success-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-success-lightest) / <alpha-value>)',
      },
      info: {
        darkest: 'hsl(var(--color-hsl-info-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-info-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-info-dark) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-info) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-info-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-info-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-info-lightest) / <alpha-value>)',
      },
      warning: {
        darkest: 'hsl(var(--color-hsl-warning-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-warning-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-warning-dark) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-warning) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-warning-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-warning-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-warning-lightest) / <alpha-value>)',
      },
      alert: {
        darkest: 'hsl(var(--color-hsl-alert-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-alert-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-alert-dark) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-alert) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-alert-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-alert-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-alert-lightest) / <alpha-value>)',
      },
      shade: {
        black: 'hsl(var(--color-hsl-shade-black) / <alpha-value>)',
        darkest: 'hsl(var(--color-hsl-shade-darkest) / <alpha-value>)',
        darker: 'hsl(var(--color-hsl-shade-darker) / <alpha-value>)',
        dark: 'hsl(var(--color-hsl-shade-dark) / <alpha-value>)',
        darkish: 'hsl(var(--color-hsl-shade-darkish) / <alpha-value>)',
        DEFAULT: 'hsl(var(--color-hsl-shade) / <alpha-value>)',
        light: 'hsl(var(--color-hsl-shade-light) / <alpha-value>)',
        lighter: 'hsl(var(--color-hsl-shade-lighter) / <alpha-value>)',
        lightest: 'hsl(var(--color-hsl-shade-lightest) / <alpha-value>)',
        white: 'hsl(var(--color-hsl-shade-white) / <alpha-value>)',
      },
      gradient: {
        primary: 'var(--color-gradient-primary)',
        secondary: 'var(--color-gradient-secondary)',
        tertiary: 'var(--color-gradient-tertiary)',
        quaternary: 'var(--color-gradient-quaternary)',
        quinary: 'var(--color-gradient-quinary)',
      },
    },
    extend: {},
  },
  corePlugins: {
    preflight: false,
  },
  plugins: [],
};
