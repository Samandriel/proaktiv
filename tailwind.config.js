/** @type {import('tailwindcss').Config} */

import colors from 'tailwindcss/colors';

module.exports = {
  darkMode: 'class',
  content: [
    './src/pages/**/*.{js,ts,jsx,tsx,mdx}',
    './src/components/**/*.{js,ts,jsx,tsx,mdx}',
    './src/app/**/*.{js,ts,jsx,tsx,mdx}',
    './src/features/**/*.{js,ts,jsx,tsx,mdx}',
  ],
  theme: {
    colors: {
      ...colors,
      primary: {
        darkest: 'hsla(var(--color-hsl-primary-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-primary-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-primary-dark), <alpha-value>)',
        darkish: 'hsla(var(--color-hsl-primary-darkish), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-primary), <alpha-value>)',
        light: 'hsla(var(--color-hsl-primary-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-primary-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-primary-lightest), <alpha-value>)',
        faded: 'hsla(var(--color-hsl-primary-faded), <alpha-value>)',
      },
      secondary: {
        darkest: 'hsla(var(--color-hsl-secondary-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-secondary-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-secondary-dark), <alpha-value>)',
        darkish: 'hsla(var(--color-hsl-secondary-darkish), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-secondary), <alpha-value>)',
        light: 'hsla(var(--color-hsl-secondary-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-secondary-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-secondary-lightest), <alpha-value>)',
        faded: 'hsla(var(--color-hsl-secondary-faded), <alpha-value>)',
      },
      tertiary: {
        darkest: 'hsla(var(--color-hsl-tertiary-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-tertiary-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-tertiary-dark), <alpha-value>)',
        darkish: 'hsla(var(--color-hsl-tertiary-darkish), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-tertiary), <alpha-value>)',
        light: 'hsla(var(--color-hsl-tertiary-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-tertiary-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-tertiary-lightest), <alpha-value>)',
        faded: 'hsla(var(--color-hsl-tertiary-faded), <alpha-value>)',
      },
      quaternary: {
        darkest: 'hsla(var(--color-hsl-quaternary-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-quaternary-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-quaternary-dark), <alpha-value>)',
        darkish: 'hsla(var(--color-hsl-quaternary-darkish), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-quaternary), <alpha-value>)',
        light: 'hsla(var(--color-hsl-quaternary-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-quaternary-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-quaternary-lightest), <alpha-value>)',
        faded: 'hsla(var(--color-hsl-quaternary-faded), <alpha-value>)',
      },
      quinary: {
        darkest: 'hsla(var(--color-quinary-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-quinary-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-quinary-dark), <alpha-value>)',
        darkish: 'hsla(var(--color-hsl-quinary-darkish), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-quinary), <alpha-value>)',
        light: 'hsla(var(--color-hsl-quinary-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-quinary-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-quinary-lightest), <alpha-value>)',
        faded: 'hsla(var(--color-hsl-quinary-faded), <alpha-value>)',
      },
      success: {
        darkest: 'hsla(var(--color-success-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-success-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-success-dark), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-success), <alpha-value>)',
        light: 'hsla(var(--color-hsl-success-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-success-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-success-lightest), <alpha-value>)',
      },
      info: {
        darkest: 'hsla(var(--color-hsl-info-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-info-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-info-dark), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-info), <alpha-value>)',
        light: 'hsla(var(--color-hsl-info-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-info-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-info-lightest), <alpha-value>)',
      },
      warning: {
        darkest: 'hsla(var(--color-hsl-warning-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-warning-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-warning-dark), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-warning), <alpha-value>)',
        light: 'hsla(var(--color-hsl-warning-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-warning-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-warning-lightest), <alpha-value>)',
      },
      alert: {
        darkest: 'hsla(var(--color-hsl-alert-darkest), <alpha-value>)',
        darker: 'hsla(var(--color-hsl-alert-darker), <alpha-value>)',
        dark: 'hsla(var(--color-hsl-alert-dark), <alpha-value>)',
        DEFAULT: 'hsla(var(--color-hsl-alert), <alpha-value>)',
        light: 'hsla(var(--color-hsl-alert-light), <alpha-value>)',
        lighter: 'hsla(var(--color-hsl-alert-lighter), <alpha-value>)',
        lightest: 'hsla(var(--color-hsl-alert-lightest), <alpha-value>)',
      },
      shade: {
        contrast00: 'hsla(var(--color-hsl-shade-contrast-00), <alpha-value>)',
        contrast01: 'hsla(var(--color-hsl-shade-contrast-01), <alpha-value>)',
        contrast02: 'hsla(var(--color-hsl-shade-contrast-02), <alpha-value>)',
        contrast03: 'hsla(var(--color-hsl-shade-contrast-03), <alpha-value>)',
        contrast04: 'hsla(var(--color-hsl-shade-contrast-04), <alpha-value>)',
        contrast05: 'hsla(var(--color-hsl-shade-contrast-05), <alpha-value>)',
        contrast06: 'hsla(var(--color-hsl-shade-contrast-06), <alpha-value>)',
        contrast07: 'hsla(var(--color-hsl-shade-contrast-07), <alpha-value>)',
        contrast08: 'hsla(var(--color-hsl-shade-contrast-08), <alpha-value>)',
        contrast09: 'hsla(var(--color-hsl-shade-contrast-09), <alpha-value>)',
        contrast10: 'hsla(var(--color-hsl-shade-contrast-10), <alpha-value>)',
      },
      gradient: {
        primary: 'var(--color-gradient-primary)',
        secondary: 'var(--color-gradient-secondary)',
        tertiary: 'var(--color-gradient-tertiary)',
        quaternary: 'var(--color-gradient-quaternary)',
        quinary: 'var(--color-gradient-quinary)',
      },
    },
    extend: {
      transitionProperty: {
        background: 'background',
      },
    },
  },
  plugins: [],
};
